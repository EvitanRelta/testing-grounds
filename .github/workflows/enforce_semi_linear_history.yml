name: Enforce Semi-Linear History

on:
  pull_request:
    types:
      - synchronize
      - opened

jobs:
  check-history:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 # Fetch all history so we can check the entire branch

    - name: Enforce semi-linear history
      run: |
        # Get the target branch name
        TARGET_BRANCH=$(gh pr view ${PR_NUMBER} --json baseRefName -q '$.baseRefName')

        # Get the SHA of the latest commit on the target branch
        LATEST_TARGET_COMMIT=$(git rev-parse origin/${TARGET_BRANCH})

        # Get the SHA of the commit where the PR branch diverged
        MERGE_BASE_COMMIT=$(git merge-base origin/${TARGET_BRANCH} HEAD)

        # Check if the divergent commit is the latest commit on the target branch
        if [ "${MERGE_BASE_COMMIT}" != "${LATEST_TARGET_COMMIT}" ]; then
          echo "Error: Your branch must be created from the latest commit on ${TARGET_BRANCH}."
          exit 1
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PR_NUMBER: ${{ github.event.pull_request.number }}
